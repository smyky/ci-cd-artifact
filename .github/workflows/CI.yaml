name: CI/CD workflow
on:
  push:
    paths-ignore:
      - '.github/workflows/CI.yaml'
      - '.gitignore'

jobs:
  # Run code tests before building the image, to ensure it is good to go
  build:
    name: Run code tests and create version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Setting up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint the code with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with unittest
      run: |
        python -m unittest discover
# Define version, create a release and push container
  create_version:
      name: Create release and push
      if: github.ref == 'refs/heads/main'
      needs: [build]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Semantic versioning
          id: versioning
          uses: PaulHatch/semantic-version@v5.0.0-beta
          with:
            branch: main
            major_pattern: "CHANGE:"
            tag_prefix: ""
            minor_pattern: "feat:"
            format: "${major}.${minor}.${patch}"
        - name: Create Release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.github_token }}
          with:
            tag_name: ${{ steps.versioning.outputs.version }}
            release_name: ${{ steps.versioning.outputs.version }}
        - name: Build and push image to the Docker Hub
          uses: docker/build-push-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
            repository: ${{ secrets.DOCKERHUB_REPOSITORY }}
            tags: latest, ${{ steps.versioning.outputs.version }}
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: task-definition/ci-cd.json
            service: ci-cd-task
            cluster: ci-cd-cluster-smyky
            wait-for-service-stability: true
            force-new-deployment: true
        - name: Send mail
          if: always()
          uses: dawidd6/action-send-mail@v2
          with:
            server_address: smtp.gmail.com
            server_port: 465
            subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            to: aws1sofiiamyk@gmail.com 
            from: Sofiia Myk
